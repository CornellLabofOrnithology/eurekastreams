<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/context
      http://www.springframework.org/schema/context/spring-context-2.5.xsd">

    <bean class="org.springframework.web.context.support.ServletContextPropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="searchContextAttributes" value="true"/>
        <property name="contextOverride" value="true"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:conf/eurekastreams-server.properties</value>
                <value>file:/etc/eurekastreams-server.properties</value>
                <value>${ESCONFIG}</value>
            </list>
        </property>
    </bean>
	
	<!-- Include common resources -->
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-settings.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-model.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-mappers.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-search.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-search-directorysearch.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-framework-ldap.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-framework-actions.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-cache-initialization.xml" />
	
	<!-- Extension point for other projects to tie in. -->
	<import resource="classpath*:/conf/external/common/*.xml" />
	<import resource="classpath*:/conf/external/main/*.xml" />
	
	<!-- alias used on all actions that submit an async action -->
	<!--
		can be of value: 
			nullTaskHandler // does not execute the action, only logs 
			executingTaskHandler // executes the task inline (non-async)
			queueTaskHandler // submits the task to the Queue 
		// must have the applicationContext-jms.xml file active
	-->
	<alias alias="taskHandler" name="${build.jms.taskhandler}" />
	
	
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-gilead.xml" />
    <import resource="classpath:/org/eurekastreams/server/conf/applicationContext-security-common.xml" />
    <import resource="classpath:/org/eurekastreams/server/conf/applicationContext-security-${build.spring.security}.xml" />
	<import resource="classpath:/org/eurekastreams/server/conf/applicationContext-restlets.xml" />
	
    <!-- Initialize Class and Field Bridges with singleton setters -->
    <import resource="classpath:/org/eurekastreams/server/conf/applicationContext-search-bridges-initialization.xml" />
    
    <!-- Initialize Entities with the web root url so we can translate relative to absolute urls -->
    <import resource="classpath:/org/eurekastreams/server/conf/applicationContext-webroot-initialization.xml" />

	<!-- A the index technique to use -->
    <import resource="classpath:/org/eurekastreams/server/conf/applicationContext-model-${build.system.nodetype}.xml" />
    
    <!-- memcached client bean -->
    <import resource="classpath:/org/eurekastreams/server/conf/applicationContext-memcached.xml" />          
    
    <!-- Setup the bean, queue, and connection to the JMS queue implementation  -->
    <import resource="classpath:/org/eurekastreams/server/conf/applicationContext-jms-pooled.xml" />
    
    <!-- The Quartz scheduled jobs -->
    ${build.system.jobscheduler}
    
    <!-- AOP support  -->
    <import resource="classpath:conf/applicationContext-aop.xml" />
    
	<!-- Part of the GWT RPC implementation (seems too little to merit its own file) -->
	<!-- 
		Notes:
		* If the need for persistentBeanManager is ever eliminated (removal of Gilead), then this should move to
		applicationContext-framework-actions.xml where it better fits.
		* autowire="constructor" is used to provide the BeanFactory without having to make ActionExecutor implement
		BeanFactoryAware.  All other constructor arguments are explicitly specified, since we don't want Spring to
		autowire them. 
	 -->    
    <bean id="actionExecutor" class="org.eurekastreams.commons.server.ActionExecutor" autowire="constructor">
    	<constructor-arg ref="serviceActionController" />
   		<constructor-arg ref="principalPopulator" />
 		<constructor-arg ref="persistentBeanManager" />
    </bean>
    
</beans>
