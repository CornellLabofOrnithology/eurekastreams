## Overview

Eureka Streams exposes certain information through [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer) Resources. The REST resources support gadgets as well as the UI when calls cannot be made through GWT's RPC mechanism. Eureka Streams uses the [RESTlet](http://www.restlet.org/) framework for creating REST resources. RESTlet provides a way to wire up implementations for REST endpoints within Spring along with configuration of the resource url's.

## REST Resource Implementation

The RESTlet implementation for Eureka Streams is described in the following component diagram. Eureka Streams RESTlet Resource implementations provide the adaptation between RESTlet requests and the Eureka Streams Action Framework.

![](images/RF_RESTlet-Implementation-Component-Diagram.jpg)

In support of the RESTlet Resource implementations for Eureka Streams a few classes were created to facilitate the adaptation between RESTlet requests and Eureka Streams Action Framework.

![](images/RF_RESTlet-Implementation-Class-Diagram.jpg)

### SMPResource

This class provides general operations for all RESTlet implementations.

Responsibilities:

* Provide a single init method that passes through the request, context, and response objects.
* Provide a ResponseAdapter that allows this top level class to be tested.
* Setup an abstract method to be called when the init method is complete. Extending classes should also be able to use the abstract method to access content from the request.

### WriteableResource

This class extends SMPResource to provide transactional wrappers around the four REST methods: Get, Put, Post, and Delete.

### ResponseAdapter

Wrapper for the Response objects that allows the SMPResource object to be tested.